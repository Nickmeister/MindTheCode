@using Microsoft.AspNetCore.Identity
@inject SignInManager<Timesheet.Models.Entities.User> SignInManager
@inject UserManager<Timesheet.Models.Entities.User> UserManager

@model IEnumerable<Timesheet.Models.ViewModels.UserViewModel>

@{
    ViewData["Title"] = "Users";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Users</h1>

@if (this.User.IsInRole("Administrator"))
{
    <p>
        <a asp-action="Create">Create new</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Email</th>
            <th>Department</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DepartmentName)
                </td>
                <td>
                    @if (this.User.IsInRole("Administrator"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit |</a>
                    }

                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>

                    @if (this.User.IsInRole("Administrator"))
                    {
                        <a asp-action="Delete" asp-route-id="@item.Id"> | Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
